{"mappings":"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","sources":["node_modules/bootstrap/scss/mixins/_breakpoints.scss","node_modules/bootstrap/scss/_grid.scss","node_modules/bootstrap/scss/mixins/_grid.scss","node_modules/bootstrap/scss/mixins/_utilities.scss","node_modules/bootstrap/scss/utilities/_api.scss","src/scss/_font.scss","src/scss/_var.scss","src/scss/_base.scss","src/scss/modules/_header.scss","src/scss/modules/_hero.scss","src/scss/modules/_showcase.scss","src/scss/modules/_utopia.scss","src/scss/modules/_single.scss","src/scss/modules/_archive.scss","src/scss/modules/_article.scss","src/scss/modules/_filters.scss"],"sourcesContent":["// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n","// Row\n//\n// Rows contain your columns.\n\n:root {\n  @each $name, $value in $grid-breakpoints {\n    --#{$prefix}breakpoint-#{$name}: #{$value};\n  }\n}\n\n@if $enable-grid-classes {\n  .row {\n    @include make-row();\n\n    > * {\n      @include make-col-ready();\n    }\n  }\n}\n\n@if $enable-cssgrid {\n  .grid {\n    display: grid;\n    grid-template-rows: repeat(var(--#{$prefix}rows, 1), 1fr);\n    grid-template-columns: repeat(var(--#{$prefix}columns, #{$grid-columns}), 1fr);\n    gap: var(--#{$prefix}gap, #{$grid-gutter-width});\n\n    @include make-cssgrid();\n  }\n}\n\n\n// Columns\n//\n// Common styles for small and large grid columns\n\n@if $enable-grid-classes {\n  @include make-grid-columns();\n}\n","// Grid system\n//\n// Generate semantic grid columns with these mixins.\n\n@mixin make-row($gutter: $grid-gutter-width) {\n  --#{$prefix}gutter-x: #{$gutter};\n  --#{$prefix}gutter-y: 0;\n  display: flex;\n  flex-wrap: wrap;\n  // TODO: Revisit calc order after https://github.com/react-bootstrap/react-bootstrap/issues/6039 is fixed\n  margin-top: calc(-1 * var(--#{$prefix}gutter-y)); // stylelint-disable-line function-disallowed-list\n  margin-right: calc(-.5 * var(--#{$prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n  margin-left: calc(-.5 * var(--#{$prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n}\n\n@mixin make-col-ready() {\n  // Add box sizing if only the grid is loaded\n  box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\n  // always setting `width: 100%;`. This works because we set the width\n  // later on to override this initial width.\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 100%; // Prevent `.col-auto`, `.col` (& responsive variants) from breaking out the grid\n  padding-right: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  padding-left: calc(var(--#{$prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  margin-top: var(--#{$prefix}gutter-y);\n}\n\n@mixin make-col($size: false, $columns: $grid-columns) {\n  @if $size {\n    flex: 0 0 auto;\n    width: percentage(divide($size, $columns));\n\n  } @else {\n    flex: 1 1 0;\n    max-width: 100%;\n  }\n}\n\n@mixin make-col-auto() {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n@mixin make-col-offset($size, $columns: $grid-columns) {\n  $num: divide($size, $columns);\n  margin-left: if($num == 0, 0, percentage($num));\n}\n\n// Row columns\n//\n// Specify on a parent element(e.g., .row) to force immediate children into NN\n// number of columns. Supports wrapping to new lines, but does not do a Masonry\n// style grid.\n@mixin row-cols($count) {\n  > * {\n    flex: 0 0 auto;\n    width: percentage(divide(1, $count));\n  }\n}\n\n// Framework grid generation\n//\n// Used only by Bootstrap to generate the correct number of grid classes given\n// any value of `$grid-columns`.\n\n@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      // Provide basic `.col-{bp}` classes for equal-width flexbox columns\n      .col#{$infix} {\n        flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4\n      }\n\n      .row-cols#{$infix}-auto > * {\n        @include make-col-auto();\n      }\n\n      @if $grid-row-columns > 0 {\n        @for $i from 1 through $grid-row-columns {\n          .row-cols#{$infix}-#{$i} {\n            @include row-cols($i);\n          }\n        }\n      }\n\n      .col#{$infix}-auto {\n        @include make-col-auto();\n      }\n\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .col#{$infix}-#{$i} {\n            @include make-col($i, $columns);\n          }\n        }\n\n        // `$columns - 1` because offsetting by the width of an entire row isn't possible\n        @for $i from 0 through ($columns - 1) {\n          @if not ($infix == \"\" and $i == 0) { // Avoid emitting useless .offset-0\n            .offset#{$infix}-#{$i} {\n              @include make-col-offset($i, $columns);\n            }\n          }\n        }\n      }\n\n      // Gutters\n      //\n      // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.\n      @each $key, $value in $gutters {\n        .g#{$infix}-#{$key},\n        .gx#{$infix}-#{$key} {\n          --#{$prefix}gutter-x: #{$value};\n        }\n\n        .g#{$infix}-#{$key},\n        .gy#{$infix}-#{$key} {\n          --#{$prefix}gutter-y: #{$value};\n        }\n      }\n    }\n  }\n}\n\n@mixin make-cssgrid($columns: $grid-columns, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .g-col#{$infix}-#{$i} {\n            grid-column: auto / span $i;\n          }\n        }\n\n        // Start with `1` because `0` is an invalid value.\n        // Ends with `$columns - 1` because offsetting by the width of an entire row isn't possible.\n        @for $i from 1 through ($columns - 1) {\n          .g-start#{$infix}-#{$i} {\n            grid-column-start: $i;\n          }\n        }\n      }\n    }\n  }\n}\n","// Utility generator\n// Used to generate utilities & print utilities\n@mixin generate-utility($utility, $infix: \"\", $is-rfs-media-query: false) {\n  $values: map-get($utility, values);\n\n  // If the values are a list or string, convert it into a map\n  @if type-of($values) == \"string\" or type-of(nth($values, 1)) != \"list\" {\n    $values: zip($values, $values);\n  }\n\n  @each $key, $value in $values {\n    $properties: map-get($utility, property);\n\n    // Multiple properties are possible, for example with vertical or horizontal margins or paddings\n    @if type-of($properties) == \"string\" {\n      $properties: append((), $properties);\n    }\n\n    // Use custom class if present\n    $property-class: if(map-has-key($utility, class), map-get($utility, class), nth($properties, 1));\n    $property-class: if($property-class == null, \"\", $property-class);\n\n    // Use custom CSS variable name if present, otherwise default to `class`\n    $css-variable-name: if(map-has-key($utility, css-variable-name), map-get($utility, css-variable-name), map-get($utility, class));\n\n    // State params to generate pseudo-classes\n    $state: if(map-has-key($utility, state), map-get($utility, state), ());\n\n    $infix: if($property-class == \"\" and str-slice($infix, 1, 1) == \"-\", str-slice($infix, 2), $infix);\n\n    // Don't prefix if value key is null (e.g. with shadow class)\n    $property-class-modifier: if($key, if($property-class == \"\" and $infix == \"\", \"\", \"-\") + $key, \"\");\n\n    @if map-get($utility, rfs) {\n      // Inside the media query\n      @if $is-rfs-media-query {\n        $val: rfs-value($value);\n\n        // Do not render anything if fluid and non fluid values are the same\n        $value: if($val == rfs-fluid-value($value), null, $val);\n      }\n      @else {\n        $value: rfs-fluid-value($value);\n      }\n    }\n\n    $is-css-var: map-get($utility, css-var);\n    $is-local-vars: map-get($utility, local-vars);\n    $is-rtl: map-get($utility, rtl);\n\n    @if $value != null {\n      @if $is-rtl == false {\n        /* rtl:begin:remove */\n      }\n\n      @if $is-css-var {\n        .#{$property-class + $infix + $property-class-modifier} {\n          --#{$prefix}#{$css-variable-name}: #{$value};\n        }\n\n        @each $pseudo in $state {\n          .#{$property-class + $infix + $property-class-modifier}-#{$pseudo}:#{$pseudo} {\n            --#{$prefix}#{$css-variable-name}: #{$value};\n          }\n        }\n      } @else {\n        .#{$property-class + $infix + $property-class-modifier} {\n          @each $property in $properties {\n            @if $is-local-vars {\n              @each $local-var, $variable in $is-local-vars {\n                --#{$prefix}#{$local-var}: #{$variable};\n              }\n            }\n            #{$property}: $value if($enable-important-utilities, !important, null);\n          }\n        }\n\n        @each $pseudo in $state {\n          .#{$property-class + $infix + $property-class-modifier}-#{$pseudo}:#{$pseudo} {\n            @each $property in $properties {\n              @if $is-local-vars {\n                @each $local-var, $variable in $is-local-vars {\n                  --#{$prefix}#{$local-var}: #{$variable};\n                }\n              }\n              #{$property}: $value if($enable-important-utilities, !important, null);\n            }\n          }\n        }\n      }\n\n      @if $is-rtl == false {\n        /* rtl:end:remove */\n      }\n    }\n  }\n}\n","// Loop over each breakpoint\n@each $breakpoint in map-keys($grid-breakpoints) {\n\n  // Generate media query if needed\n  @include media-breakpoint-up($breakpoint) {\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n    // Loop over each utility property\n    @each $key, $utility in $utilities {\n      // The utility can be disabled with `false`, thus check if the utility is a map first\n      // Only proceed if responsive media queries are enabled or if it's the base media query\n      @if type-of($utility) == \"map\" and (map-get($utility, responsive) or $infix == \"\") {\n        @include generate-utility($utility, $infix);\n      }\n    }\n  }\n}\n\n// RFS rescaling\n@media (min-width: $rfs-mq-value) {\n  @each $breakpoint in map-keys($grid-breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n    @if (map-get($grid-breakpoints, $breakpoint) < $rfs-breakpoint) {\n      // Loop over each utility property\n      @each $key, $utility in $utilities {\n        // The utility can be disabled with `false`, thus check if the utility is a map first\n        // Only proceed if responsive media queries are enabled or if it's the base media query\n        @if type-of($utility) == \"map\" and map-get($utility, rfs) and (map-get($utility, responsive) or $infix == \"\") {\n          @include generate-utility($utility, $infix, true);\n        }\n      }\n    }\n  }\n}\n\n\n// Print utilities\n@media print {\n  @each $key, $utility in $utilities {\n    // The utility can be disabled with `false`, thus check if the utility is a map first\n    // Then check if the utility needs print styles\n    @if type-of($utility) == \"map\" and map-get($utility, print) == true {\n      @include generate-utility($utility, \"-print\");\n    }\n  }\n}\n","@font-face {\n  font-family: \"Pixeloid\";\n  src: url(../asset/fonts/PixeloidMono.woff);\n}\n\n@font-face {\n  font-family: \"Helvetica\";\n  src: url(../asset/fonts/Helvetica.woff);\n}\n@font-face {\n  font-style: italic;\n  font-family: \"Helvetica\";\n  src: url(../asset/fonts/Helvetica-Oblique.woff);\n}\n\n@font-face {\n  font-family: \"helvetica\";\n  font-weight: 600;\n  src: url(../asset/fonts/Helvetica-Bold.woff);\n}\n@font-face {\n  font-family: \"helvetica\";\n  font-weight: 200;\n  src: url(../asset/fonts/helvetica-Light.woff);\n}\n\n@font-face {\n  font-family: \"Inspiration\";\n  src: url(../asset/fonts/Inspiration-Regular.woff);\n}\n","$dark: #000;\n$light: #fff;\n\n// COLORS\n$dark-blue: #0101a1;\n$blue: #2d84c4;\n$dark-red: #b00202;\n$red: #fe280e;\n$green: #00ff2f;\n$yellow: #fdfd43;\n\n:root {\n  --main-score-color: #fe280e;\n  --main-score-gradient: linear-gradient(0deg, #ef9416 0%, #fed78f 100%);\n\n  --solo-score-color: #ff9f38;\n  --solo-score-gradient: linear-gradient(0deg, #ef9416 0%, #fed78f 100%);\n\n  --gradientAngle: 180deg;\n  --gradientColors: #fe280e 0%, #00ff2f 52%, #00c 100%;\n}\n\n.low {\n  --main-score-color: #fe280e !important;\n  --main-score-gradient: linear-gradient(0deg, #d91414 0%, #fd8e8e 100%);\n}\n.mid {\n  --main-score-color: #ff9f38 !important;\n  --main-score-gradient: linear-gradient(0deg, #ef9416 0%, #fed78f 100%);\n}\n.high {\n  --main-score-color: #00ff2f !important;\n  --main-score-gradient: linear-gradient(0deg, #28c33a 0%, #acfcbc 100%);\n}\n\n.solo-low {\n  --solo-score-color: #fe280e !important;\n  --solo-score-gradient: linear-gradient(0deg, #d91414 0%, #fd8e8e 100%);\n}\n.solo-mid {\n  --solo-score-color: #ff9f38 !important;\n  --solo-score-gradient: linear-gradient(0deg, #ef9416 0%, #fed78f 100%);\n}\n.solo-high {\n  --solo-score-color: #00ff2f !important;\n  --solo-score-gradient: linear-gradient(0deg, #28c33a 0%, #acfcbc 100%);\n}\n\n// GRADIENTS\n$gradient-blue: linear-gradient(0deg, #b3d8eb 0%, #f3fdff 100%);\n$gradient-mix: linear-gradient(180deg, #fe280e 0%, #00ff2f 52%, #00c 100%);\n$gradient-grey: linear-gradient(180deg, #c0c0c0 0%, #a6a6a6 100%);\n$gradient-red: linear-gradient(0deg, #d91414 0%, #fd8e8e 100%);\n\n// Variables CSS\n\n//\n@mixin bp($size) {\n  @if $size == \"md\" {\n    @media (min-width: 768px) {\n      @content;\n    }\n  } @else if $size == \"lg\" {\n    @media (min-width: 992px) {\n      @content;\n    }\n  } @else if $size== \"xl\" {\n    @media (min-width: 1200px) {\n      @content;\n    }\n  } @else if $size== \"xxl\" {\n    @media (min-width: 1400px) {\n      @content;\n    }\n  } @else if $size== \"sm\" {\n    @media (max-width: 767px) {\n      @content;\n    }\n  }\n}\n","* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n\n  *::selection {\n    background: $dark;\n    color: $light;\n  }\n}\n\na {\n  color: inherit;\n}\n\nimg,\nvideo {\n  display: block;\n}\n\nbody {\n  font-family: \"helvetica\";\n  overflow-x: hidden;\n  color: $dark;\n}\n\nmain {\n  overflow: hidden;\n}\n\n.scrolltrigger-cont {\n  overflow: hidden;\n}\n\n.spacer {\n  height: 100vh;\n}\n\nul {\n  list-style: none;\n}\n",".header-container {\n  display: flex;\n  flex-direction: column;\n  width: 95vw;\n  margin: auto;\n  position: fixed;\n  top: 1vh;\n  right: 2.5vw;\n  padding: 8px 24px;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 100;\n\n  border-radius: 10px;\n  border: 1px solid $dark;\n  background: rgba(209, 229, 254, 0.4);\n  box-shadow: 4px 4px 8px 0 rgba($dark, 0.25);\n  backdrop-filter: blur(2px);\n}\n\n.header-h1 {\n  font-family: \"pixeloid\";\n  font-size: 1.5rem;\n\n  a {\n    transition: letter-spacing 0.3s;\n  }\n\n  &:hover a {\n    // text-decoration-thickness: 4px;\n    letter-spacing: 5px;\n    color: $red;\n  }\n}\n\n.header-nav {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n\n  padding: 10px 16px;\n  border-radius: 10px;\n  border: 5px solid $blue;\n  background: $gradient-blue;\n  box-shadow: 2px 2px 8px 0px rgba(0, 0, 0, 0.25);\n\n  &:hover {\n    .header-nav-item {\n      &:hover {\n        text-decoration-thickness: 4px;\n      }\n\n      &:not(:hover) {\n        opacity: 0.5;\n      }\n    }\n  }\n}\n\n.header-nav-item {\n  transition: opacity 0.2s;\n}\n\n.header-nav-mobile {\n  display: flex;\n  justify-content: flex-end;\n  flex-wrap: wrap;\n  gap: 8px;\n  overflow: hidden;\n  margin-top: 0;\n\n  max-height: 0;\n  transition: max-height 0.4s ease-in-out, margin-top 0.1s 0.4s ease-in-out;\n\n  .header-nav-item:nth-child(2) {\n    order: 1;\n  }\n}\n\n.header-container.open {\n  .header-nav-mobile {\n    max-height: 100vh;\n    margin-top: 12px;\n    transition: max-height 0.5s ease-in-out, margin-top 0.1s ease-in-out;\n  }\n\n  .header-btn svg {\n    transform: rotate(-90deg);\n  }\n}\n\n.header-btn {\n  border: none;\n  background: none;\n\n  svg {\n    transition: transform 0.3s ease-in-out;\n  }\n}\n\n.header-nav-item {\n  font-size: 1.2rem;\n  font-weight: 600;\n}\n\n.header-mobile-navbar {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n}\n\n@include bp(\"sm\") {\n  .header-nav-item {\n    padding: 10px 16px;\n    border-radius: 10px;\n    border: 5px solid $blue;\n    background: $gradient-blue;\n    box-shadow: 2px 2px 8px 0px rgba(0, 0, 0, 0.25);\n  }\n}\n\n@include bp(\"md\") {\n  .header-container {\n    flex-direction: row;\n  }\n\n  .header-nav-item {\n    &:not(:last-child) {\n      border-right: 1.5px solid rgba($dark, 0.2);\n      padding-right: 8px;\n    }\n  }\n}\n",".hero-background {\n  img {\n    width: 100vw;\n    height: 110lvh;\n    object-fit: cover;\n    object-position: center;\n    user-select: none;\n    pointer-events: none;\n  }\n}\n\n.hero-section {\n  position: relative;\n  z-index: 3;\n  overflow: hidden;\n}\n\n.hero-titles {\n  position: absolute;\n  inset: 10vh 0 0 0;\n}\n\n.hero-title-cont {\n  position: absolute;\n\n  &.welcome {\n    top: 0;\n    left: 6vw;\n    width: 60vw;\n    rotate: -15deg;\n  }\n\n  &.sur {\n    top: 8vh;\n    left: 67vw;\n    width: 17vw;\n    rotate: 10deg;\n  }\n\n  &.globalies {\n    top: 20vh;\n    left: 30vw;\n    width: 70vw;\n    rotate: 15deg;\n  }\n}\n\n.hero-title-img {\n  // mix-blend-mode: difference;\n  width: 100%;\n  pointer-events: none;\n  user-select: none;\n}\n\n.hero-cta {\n  position: absolute;\n  bottom: 25vh;\n  left: 50vw;\n  transform: translateX(-50%);\n  font-size: 4vw;\n\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  color: $white;\n  animation: opacityBreath infinite 4s ease-in-out;\n}\n\n@keyframes opacityBreath {\n  0% {\n    opacity: 0.4;\n    transform: translateY(0) translateX(-50%);\n  }\n  50% {\n    opacity: 1;\n    transform: translateY(-10%) translateX(-50%);\n  }\n  100% {\n    transform: translateY(0) translateX(-50%);\n    opacity: 0.4;\n  }\n}\n\n@include bp(\"md\") {\n  .hero-cta {\n    bottom: 15vh;\n    left: 50vw;\n    font-size: 2vw;\n    padding: 0 2vw 1vw;\n  }\n  .hero-title-cont {\n    &.welcome {\n      top: 10vh;\n      left: 2vw;\n      width: 38vw;\n    }\n\n    &.sur {\n      top: 15vh;\n      left: 42vw;\n      rotate: -5deg;\n      width: 10vw;\n    }\n\n    &.globalies {\n      top: 23vh;\n      left: 53vw;\n      width: 45vw;\n      rotate: 20deg;\n    }\n  }\n}\n",".showcase-background {\n  position: fixed;\n  inset: 0;\n  z-index: -1;\n\n  img {\n    width: 100vw;\n    height: 100lvh;\n    object-fit: cover;\n  }\n}\n\n.showcase-searchbar {\n  display: flex;\n  flex-direction: column;\n\n  gap: 1vw;\n  align-items: center;\n\n  position: absolute;\n  z-index: 5;\n  top: 45vh;\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n.showcase-searchbar-cta {\n  padding: 10px 16px;\n  border-radius: 10px;\n  border: 5px solid $blue;\n  background: $gradient-blue;\n  box-shadow: 2px 2px 8px 0px rgba(0, 0, 0, 0.25);\n  color: $dark;\n  font-family: \"helvetica\";\n  font-size: 3.5vw;\n  font-weight: 700;\n  text-decoration: underline;\n\n  &.icon {\n    text-decoration: none;\n  }\n}\n\n.showcase-cards-cont {\n  z-index: 2;\n\n  gap: 1vh;\n  row-gap: 2vh;\n\n  width: 100%;\n  // transform: translateY(-20vh);\n  margin-top: -50vh;\n\n  display: flex;\n  flex-direction: column;\n\n  justify-content: space-between;\n  padding: 0 3vw;\n  align-items: center;\n}\n\n.showcase-background-gradient {\n  position: absolute;\n  inset: 0;\n  background: linear-gradient(180deg, var(--gradientColors));\n  mix-blend-mode: difference;\n}\n\n.showcase-card {\n  position: relative;\n  z-index: 5;\n  background: var(--solo-score-gradient);\n  text-decoration: none;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  width: 90%;\n  padding: 2vh 3vw;\n  position: relative;\n  transition: border-radius 0.5s;\n  cursor: pointer;\n\n  &:hover {\n    transition: border-radius 5s;\n    border-radius: 50%;\n    mix-blend-mode: hard-light;\n\n    .showcase-card-cta {\n      max-width: 100px;\n    }\n  }\n}\n\n.showcase-card-logos {\n  position: absolute;\n  top: 0;\n  right: -1vw;\n  bottom: 0;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n}\n\n.showcase-card-logo {\n  width: 15vw;\n  height: 25%;\n  rotate: 15deg;\n  opacity: 0.8;\n}\n\n.showcase-card-title-cont {\n  display: flex;\n  align-items: baseline;\n  gap: 1vw;\n}\n\n.showcase-card-cta {\n  overflow: hidden;\n  margin-left: 1vw;\n  white-space: nowrap;\n  transition: max-width 0.3s 0.2s;\n  text-decoration-style: dotted;\n  text-decoration-line: underline;\n}\n\n.showcase-card-title {\n  font-family: \"inspiration\";\n  font-size: 12vw;\n  font-weight: 300;\n  margin-bottom: 2vh;\n}\n\n.showcase-card-score-cont {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  transform: translateY(20%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.showcase-card-score-bg {\n  position: absolute;\n  svg {\n    width: 20vw;\n    height: 20vw;\n  }\n}\n\n.showcase-card-score {\n  position: absolute;\n  z-index: 1;\n  color: var(--solo-score-color);\n  -webkit-text-stroke-width: 1px;\n  -webkit-text-stroke-color: $dark;\n  font-family: \"Pixeloid\";\n  font-size: 30px;\n}\n\n.showcase-card-brands-cont {\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  gap: 1vw;\n}\n\n.showcase-card-brand {\n  display: flex;\n  position: relative;\n  z-index: 1;\n\n  padding: 1vh 1vw;\n  flex-direction: column;\n  align-items: center;\n\n  border-radius: 6px;\n  border: 5px solid rgba($dark, 0.9);\n  background: var(--solo-score-gradient);\n  box-shadow: 0px 0px 40px 0px rgba($white, 0.75);\n}\n\n.showcase-card-brand-title {\n  color: $white;\n  text-shadow: 0px 2.554px 6.386px rgba(0, 0, 0, 0.36);\n  -webkit-text-stroke-width: 1px;\n  -webkit-text-stroke-color: var(--solo-score-color);\n  font-family: \"Pixeloid\";\n  font-size: 28px;\n  z-index: 1;\n}\n\n.showcase-card-brand-type {\n  color: $green;\n  font-family: \"Helvetica\";\n  font-size: 20px;\n  position: relative;\n  z-index: 1;\n  // mix-blend-mode: color-dodge;\n}\n\n.showcase-card-brand-logo {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  mix-blend-mode: color-burn;\n  inset: 0;\n}\n\n@include bp(\"md\") {\n  .showcase-searchbar-cta {\n    font-size: 1vw;\n  }\n\n  .showcase-searchbar {\n    flex-direction: row;\n    top: 55vh;\n  }\n\n  .showcase-card {\n    padding: 1vh 2vw;\n    width: 45vw;\n  }\n\n  .showcase-cards-cont {\n    flex-direction: row;\n    flex-wrap: wrap;\n    row-gap: 5vh;\n  }\n\n  .showcase-card-title {\n    font-size: 4vw;\n  }\n\n  .showcase-card-cta {\n    max-width: 0;\n    margin-left: 0;\n  }\n\n  .showcase-card-score {\n    font-size: 3vw;\n    -webkit-text-stroke-width: 2px;\n  }\n\n  .showcase-card-score-bg {\n    svg {\n      width: 8vw;\n      height: 8vw;\n    }\n  }\n\n  .showcase-card-logo {\n    width: 10vw;\n  }\n\n  .showcase-card-brand {\n    border-width: 12px;\n  }\n\n  .showcase-card-brand-title {\n    font-size: 2.5vw;\n  }\n  .showcase-card-brand-type {\n    font-size: 1.5vw;\n  }\n}\n",".utopia-img-transition {\n  width: 100vw;\n\n  &.moleson {\n    position: absolute;\n    bottom: 0;\n  }\n}\n\n.utopia-cont {\n  color: $light;\n\n  position: relative;\n  z-index: 5;\n  clip-path: polygon(\n    0 100%,\n    0 0,\n    100% 0,\n    100% 100%,\n    90% 98%,\n    80% 100%,\n    70% 98%,\n    60% 100%,\n    50% 98%,\n    40% 100%,\n    30% 98%,\n    20% 100%,\n    10% 98%\n  );\n  overflow: hidden;\n}\n\n.utopia-titles {\n  background: $dark;\n  margin: auto;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: baseline;\n\n  padding: 10vh 0 20vh;\n}\n\n.utopia-title {\n  font-family: \"Pixeloid\";\n  font-size: 40px;\n  font-weight: 400;\n  transform: translateX(50%);\n}\n\n.utopia-dystitle {\n  color: $red;\n\n  font-family: Helvetica;\n  font-size: 36px;\n  transform: translateX(-50%);\n  mix-blend-mode: difference;\n}\n\n.utopia-texts {\n  background: $dark;\n  display: flex;\n  flex-direction: column;\n}\n\n.utopia-text {\n  font-size: 16px;\n  line-height: 140%;\n  margin-left: 3vw;\n  margin-bottom: 20vh;\n  z-index: 1;\n  position: relative;\n  width: 50vw;\n\n  b {\n    font-weight: 400;\n    font-family: \"Pixeloid\";\n  }\n\n  span {\n    font-style: normal;\n    font-family: \"inspiration\";\n    font-size: 24px;\n  }\n  &.right {\n    text-align: right;\n    align-self: flex-end;\n    margin-right: 6vw;\n  }\n\n  &.highlight {\n    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    font-family: \"Pixeloid \";\n    color: $red;\n    font-size: 28px;\n    margin-right: 1vw;\n    margin-bottom: 25vh;\n  }\n\n  &.main {\n    width: unset;\n    margin-bottom: 40vh;\n  }\n\n  &.center {\n    align-self: center;\n    margin-bottom: 15vh;\n  }\n}\n\n@include bp(\"md\") {\n  .utopia-title {\n    font-size: 5vw;\n  }\n\n  .utopia-dystitle {\n    font-size: 4.5vw;\n  }\n\n  .utopia-text {\n    font-size: 1.5vw;\n    margin-left: 10vw;\n\n    span {\n      font-size: 2.2vw;\n    }\n\n    &.highlight {\n      margin-right: 15vw;\n      font-size: 1.7vw;\n    }\n\n    &.center {\n      margin-left: 10vw;\n    }\n  }\n}\n",".single-hero-img {\n  width: 100vw;\n  height: 100lvh;\n  mix-blend-mode: difference;\n  position: absolute;\n  // inset: 0;\n  bottom: 0;\n}\n\n.single-content {\n  position: relative;\n}\n\n.single-bg {\n  position: absolute;\n  inset: 0;\n  z-index: -2;\n  background: $dark-blue;\n}\n\n.single-pattern-container {\n  background-image: url(../asset/img/pattern-1.png?as=webp&width=1000);\n  background-repeat: repeat;\n  background-size: auto; /* or specify dimensions */\n  background-position: center;\n  position: absolute;\n  inset: 0;\n\n  padding-bottom: 15vh;\n  z-index: -1;\n}\n\n.single-hero-tiles {\n  position: absolute;\n  inset: 0;\n  // mix-blend-mode: difference;\n  background-image: url(../asset/img/logo/nestle-logo.png?width=100);\n  background-size: 15%;\n\n  z-index: -1;\n  opacity: 0.2;\n  animation: opacity infinite 4s ease-in-out;\n}\n\n@keyframes opacity {\n  0% {\n    opacity: 0.2;\n  }\n  50% {\n    opacity: 0.7;\n  }\n  100% {\n    opacity: 0.2;\n  }\n}\n\n.single-hero-cont {\n  background: var(--main-score-color);\n  position: relative;\n  z-index: -2;\n  height: 130vh;\n  overflow: hidden;\n}\n\n.single-hero-siege-social,\n.single-alternative-section-title {\n  color: $dark;\n  text-align: center;\n  text-shadow: 0px 4px 7px rgba(0, 0, 0, 0.4);\n  -webkit-text-stroke-width: 1px;\n  -webkit-text-stroke-color: $light;\n  font-family: \"Inspiration\";\n  font-size: 70px;\n  margin-bottom: 10vh;\n  padding-top: 25vh;\n  font-weight: 400;\n  position: relative;\n  z-index: 1;\n}\n\n.single-hero-title {\n  color: $light;\n  font-family: \"helvetica\";\n  font-size: 30vw;\n  font-weight: 700;\n  mix-blend-mode: difference;\n  width: fit-content;\n  white-space: nowrap;\n  position: relative;\n\n  line-height: 80%;\n  margin-bottom: 5vh;\n  -webkit-text-stroke: 2px $yellow;\n}\n\n.single-hero-score-cont {\n  position: relative;\n  z-index: 1;\n  border-radius: 25px;\n  border: 8px solid var(--main-score-color);\n  background: linear-gradient(180deg, #0101a1 0%, #010175 100%);\n\n  overflow: hidden;\n  width: 95vw;\n  margin: auto;\n}\n\n.single-hero-score-line {\n  width: 300%;\n  display: flex;\n  justify-content: space-between;\n  animation: slider 5s linear infinite;\n}\n\n.single-hero-score {\n  color: $light;\n  -webkit-text-stroke-width: 1px;\n  -webkit-text-stroke-color: var(--main-score-color);\n  font-family: \"Pixeloid \";\n  font-size: 42px;\n\n  font-weight: 400;\n}\n\n@keyframes slider {\n  from {\n    transform: translateX(0);\n  }\n  to {\n    transform: translateX(-50%);\n  }\n}\n\n.single-notation-transi {\n  width: 100vw;\n  z-index: 0;\n  left: 0;\n  top: 0;\n  height: 30vh;\n  background: linear-gradient(0deg, #0101a1 0%, rgba(115, 115, 115, 0) 100%);\n  position: absolute;\n  transform: translateY(-100%);\n\n  &.reverse {\n    transform: translateY(0);\n    background: linear-gradient(\n      180deg,\n      #0101a1 0%,\n      rgba(115, 115, 115, 0) 100%\n    );\n  }\n}\n\n.single-notation-section {\n  padding: 2vh 1vw;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.single-notation-critere-cont {\n  z-index: 1;\n  position: relative;\n  display: flex;\n\n  max-width: 95vw;\n  padding: 20px;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 27px;\n  border-radius: 10px;\n  background: rgba($light, 0.15);\n  backdrop-filter: blur(5px);\n  margin-bottom: 10vh;\n}\n\n.single-notation-critere-titles {\n  color: $yellow;\n\n  font-family: \"Pixeloid \";\n  font-size: 20px;\n  font-weight: 400;\n}\n\n.single-notation-criteres {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1vw;\n}\n\n.single-notation-critere {\n  display: flex;\n  padding: 10px;\n  align-items: center;\n  gap: 8px;\n  border-radius: 5px;\n  border: 4px solid var(--solo-score-color);\n  background: $gradient-grey;\n  font-size: 18px;\n}\n.single-notation-critere-label {\n  font-weight: 600;\n}\n\n.single-notation-critere-score {\n  border-radius: 3px;\n  border: 1px solid $dark;\n  background: var(--solo-score-color);\n  padding: 0px 4px 0px 2px;\n}\n\n.single-notation-critere-cont.juridique {\n  width: fit-content;\n}\n\n.single-notation-juridique-cont {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 1vh;\n  width: 100%;\n}\n\n.single-notation-juridique {\n  gap: 4vw;\n  display: flex;\n  background: $gradient-red;\n  border-radius: 10px;\n  border: 4px solid $red;\n  padding: 10px 24px;\n  text-decoration: none;\n  transition: transform 0.5s;\n\n  &:hover {\n    transform: translateX(-10%);\n    color: $light;\n    border-color: $light;\n  }\n}\n\n.single-notation-juridique-texts {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-end;\n}\n\n.single-notation-juridique-line {\n  display: flex;\n  gap: 0.5vw;\n  align-items: baseline;\n}\n\n.single-notation-juridique-icon {\n  font-size: 8vw;\n}\n\n.single-notation-juridique-type {\n  font-size: 16px;\n  font-family: \"helvetica\";\n  font-weight: 700;\n}\n\n.single-notation-juridique-place {\n  font-size: 20px;\n  font-family: \"Inspiration\";\n}\n\n.single-notation-juridique-cta {\n  font-size: 14px;\n  text-decoration: underline;\n}\n\n.single-multinationale-thumbnail {\n  border-radius: 8px;\n  border: 4px solid var(--grey, #c0c0c0);\n  background: var(--solo-score-color);\n  display: inline-block;\n  position: relative;\n  text-decoration: none;\n  width: 95vw;\n  padding: 1vh 1vw;\n  z-index: 1;\n  transform: translateY(-30%);\n\n  &:hover {\n    .single-multinationale-img.logo {\n      opacity: 0.6;\n    }\n  }\n\n  &.inde {\n    background: var(--main-score-color);\n  }\n}\n\n.single-multinationale-score {\n  color: var(--solo-score-color);\n  -webkit-text-stroke-width: 3px;\n  -webkit-text-stroke-color: $light;\n  font-family: \"Pixeloid\";\n  font-size: 35vw;\n  font-weight: 400;\n  z-index: 1;\n  position: relative;\n  text-align: right;\n  line-height: 95%;\n}\n\n.single-multinationale-img {\n  position: absolute;\n  inset: 0;\n  width: 100%;\n  height: 100%;\n  mix-blend-mode: difference;\n\n  &.logo {\n    mix-blend-mode: normal;\n    opacity: 0;\n  }\n}\n\n.single-multinationale-name {\n  color: $light;\n  font-family: \"helvetica\";\n  font-size: 20vw;\n  font-weight: 700;\n  text-decoration: underline;\n  mix-blend-mode: difference;\n}\n\n.inde .single-multinationale-name {\n  margin-top: 10vh;\n}\n\n.single-multinationale-text {\n  color: $light;\n  text-align: right;\n  font-family: Helvetica;\n  font-size: 4vw;\n  position: absolute;\n  bottom: 1vh;\n  right: 1vw;\n  mix-blend-mode: difference;\n}\n\n.single-alternative-section {\n  position: relative;\n  height: 105vh;\n}\n\n.single-alternative-fade {\n  position: absolute;\n  top: 0;\n  width: 100vw;\n  height: 50vh;\n  transform: translateY(-70%);\n  mix-blend-mode: hard-light;\n  z-index: -1;\n\n  &.sous-marque {\n    transform: translateY(-50%);\n    height: 80vh;\n  }\n}\n\n.single-alternative-bg {\n  height: 120vh;\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  pointer-events: none;\n  width: 100vw;\n\n  &.sous-marque {\n    height: 150vh;\n    top: -35vh;\n  }\n}\n\n.single-alternative-content {\n  position: relative;\n  z-index: 2;\n}\n\n.single-alternative-section-title {\n  padding-top: 0;\n}\n\n.single-alternative {\n  padding: 16px 8px;\n  background: var(--solo-score-color);\n  display: inline-block;\n  text-decoration: none;\n  color: $dark;\n  position: relative;\n  width: 55vw;\n  box-shadow: 0px 0px 20px 0px rgba($light, 0.6);\n  transition: border-radius 0.3s;\n  overflow: hidden;\n\n  &:hover {\n    border-radius: 50%;\n    // color: $light;\n    animation: changeColor infinite 1s;\n  }\n}\n\n@keyframes changeColor {\n  0% {\n    color: $dark;\n  }\n  50% {\n    color: $light;\n  }\n  100% {\n    color: $dark;\n  }\n}\n\n.single-alternative-cont {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  padding: 0 1vw 0;\n}\n\n.single-alternative-title {\n  font-family: \"Pixeloid \";\n  font-size: 16px;\n  text-decoration: underline;\n  margin-bottom: 2vh;\n}\n\n.single-alternative-type {\n  font-size: 14px;\n  position: relative;\n  z-index: 1;\n}\n\n.single-alternative-score {\n  display: flex;\n  justify-content: space-between;\n  position: absolute;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  padding: 8px;\n\n  color: $light;\n  font-family: \"Inspiration\";\n  font-size: 50px;\n  line-height: 80%;\n  mix-blend-mode: soft-light;\n}\n\n.single-alternative-blank {\n  position: relative;\n  z-index: 2;\n  text-align: center;\n  font-size: 20px;\n  color: $dark;\n  background: $gradient-mix;\n  padding: 2vh 0 3vh;\n  margin-top: 30vh;\n  cursor: not-allowed;\n\n  &:hover {\n    background-size: 200% 200%;\n    font-family: \"inspiration\";\n    font-weight: 300;\n  }\n}\n\n.single-alternative-corr {\n  color: $light;\n  font-family: \"Pixeloid \";\n  font-size: 16px;\n  text-align: center;\n  opacity: 0.6;\n  position: absolute;\n  bottom: 5vh;\n  left: 50vw;\n  transform: translateX(-50%);\n  z-index: 2;\n  padding: 4px 8px;\n\n  &.sous-marque {\n    opacity: 1;\n    backdrop-filter: blur(2px);\n  }\n\n  &:hover {\n    opacity: 1;\n    color: $red;\n    background: rgba($light, 0.7);\n  }\n}\n\n@include bp(\"sm\") {\n  .single-multinationale-thumbnail,\n  .single-notation-critere-cont.juridique {\n    order: -1;\n    align-self: flex-end;\n  }\n\n  .single-notation-section {\n    gap: 2vh;\n  }\n}\n\n@include bp(\"md\") {\n  .single-hero-img {\n    height: 100%;\n\n    inset: 0;\n    bottom: unset;\n  }\n\n  .single-hero-siege-social,\n  .single-alternative-section-title {\n    font-size: 100px;\n    margin-bottom: 0;\n  }\n\n  .single-hero-siege-social {\n    margin-bottom: 20vh;\n  }\n\n  .single-hero-score {\n    font-size: 79px;\n  }\n\n  .single-hero-score-line {\n    width: 200%;\n  }\n\n  .single-alternative-blank {\n    font-size: 32px;\n  }\n\n  .single-hero-title {\n    margin-bottom: 0;\n    -webkit-text-stroke-width: 5px;\n  }\n\n  .single-notation-critere-titles {\n    font-size: 2.5vw;\n  }\n\n  .single-notation-section {\n    flex-direction: row;\n  }\n\n  .single-notation-critere-cont {\n    width: 55vw;\n  }\n\n  .single-notation-juridique {\n    gap: 1.5vw;\n  }\n\n  .single-notation-juridique-icon {\n    font-size: 3vw;\n  }\n\n  .single-notation-critere {\n    font-size: 1.5vw;\n  }\n\n  .single-notation-juridique-place {\n    font-size: 1.8vw;\n  }\n\n  .single-notation-juridique-type {\n    font-size: 1.5vw;\n  }\n\n  .single-notation-juridique-cta {\n    font-size: 1vw;\n  }\n\n  .single-multinationale-thumbnail {\n    width: 30vw;\n  }\n\n  .single-multinationale-score {\n    font-size: 15vw;\n    -webkit-text-stroke-width: 4px;\n  }\n\n  .single-multinationale-name {\n    font-size: 4vw;\n  }\n\n  .single-multinationale-text {\n    font-size: 1.5vw;\n  }\n\n  .single-alternative-title {\n    font-size: 2vw;\n  }\n\n  .single-alternative-type {\n    font-size: 24px;\n  }\n\n  .single-alternative-cont {\n    gap: 1vw;\n    padding: 10vh 2vw 0;\n  }\n\n  .single-alternative {\n    width: 30vw;\n  }\n\n  .single-alternative-score {\n    font-size: 84px;\n  }\n\n  .single-alternative-corr {\n    font-size: 24px;\n  }\n}\n",".archive-bg {\n  width: 100%;\n  height: 100%;\n}\n\n.archive-bg-cont {\n  position: fixed;\n  z-index: -1;\n  inset: 0;\n}\n\n.archive-content {\n  position: relative;\n  overflow-y: visible;\n  min-height: 100lvh;\n}\n\n.archive-content-bg {\n  position: absolute;\n  inset: 0;\n  background: $gradient-mix;\n  mix-blend-mode: difference;\n}\n\n.archive-title-cont {\n  padding: 30vh 0;\n  position: relative;\n}\n\n.archive-title {\n  position: absolute;\n  bottom: 0;\n  color: $light;\n\n  &.main {\n    -webkit-text-stroke-width: 1px;\n    -webkit-text-stroke-color: $dark;\n    font-family: \"Pixeloid\";\n    font-size: 18vw;\n    font-weight: 400;\n    z-index: 1;\n    &.multi {\n      font-size: 8vw;\n    }\n  }\n\n  &.difference {\n    font-family: Helvetica;\n    font-size: 23vw;\n    font-weight: 700;\n\n    mix-blend-mode: difference;\n    &.multi {\n      font-size: 12vw;\n    }\n  }\n}\n\n.archives-cont {\n  margin-top: 5vh;\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  justify-content: space-between;\n  gap: 1vw;\n  row-gap: 2vw;\n  margin-bottom: 5vh;\n}\n\n.archive-item {\n  padding: 16px 8px;\n  background: var(--solo-score-gradient);\n  display: inline-block;\n  text-decoration: none;\n  color: $dark;\n  position: relative;\n  width: 48%;\n  border: 3px solid var(--solo-score-color);\n  border-radius: 12px;\n  box-shadow: 0px 0px 20px 0px rgba($light, 0.6);\n  transition: border-radius 0.3s;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n\n  &:hover {\n    border-radius: 50%;\n    // color: $light;\n    animation: changeColor infinite 1s;\n  }\n}\n\n@keyframes changeColor {\n  0% {\n    color: $dark;\n  }\n  50% {\n    color: $light;\n  }\n  100% {\n    color: $dark;\n  }\n}\n\n.archive-item-cont {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  padding: 0 1vw 0;\n}\n\n.archive-item-logo {\n  position: absolute;\n  inset: 0;\n  height: 100%;\n  width: 100%;\n  z-index: 0;\n  mix-blend-mode: difference;\n  opacity: 0.7;\n  filter: blur(2px) brightness(0.6);\n}\n\n.archive-item-title {\n  font-family: \"Pixeloid \";\n  font-size: 16px;\n  text-decoration: underline;\n  margin-bottom: 2vh;\n  position: relative;\n  z-index: 1;\n}\n\n.archive-item-texts {\n  position: relative;\n  z-index: 1;\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.archive-item-type {\n  font-size: 14px;\n  position: relative;\n  z-index: 1;\n}\n\n.archive-item-situation {\n  font-size: 14px;\n  font-weight: 600;\n  position: relative;\n  z-index: 1;\n}\n\n.archive-item-score {\n  display: flex;\n  justify-content: space-between;\n  position: absolute;\n  z-index: 1;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  padding: 8px;\n\n  color: $light;\n  font-family: \"Inspiration\";\n  font-size: 50px;\n  line-height: 80%;\n  mix-blend-mode: soft-light;\n}\n\n.archive-corr {\n  color: $light;\n  font-family: \"Pixeloid \";\n  font-size: 16px;\n  text-align: center;\n  opacity: 0.6;\n  position: relative;\n  bottom: 5vh;\n  left: 50vw;\n  transform: translateX(-50%);\n  z-index: 2;\n  padding: 4px 8px;\n\n  &.sous-marque {\n    opacity: 1;\n    backdrop-filter: blur(2px);\n  }\n\n  &:hover {\n    opacity: 1;\n    color: $red;\n    background: rgba($light, 0.7);\n  }\n}\n\n@include bp(\"md\") {\n  .archive-corr {\n    font-size: 24px;\n  }\n\n  .archive-cont {\n    gap: 2vh;\n    row-gap: unset;\n  }\n  .archive-item-title {\n    font-size: 2vw;\n  }\n\n  .archive-item-type,\n  .archive-item-situation {\n    font-size: 24px;\n  }\n\n  .archive-item-cont {\n    gap: 5vw;\n    padding: 10vh 2vw 0;\n  }\n\n  .archive-item {\n    width: 30%;\n  }\n\n  .archive-item-score {\n    font-size: 84px;\n  }\n\n  .archive-title {\n    &.main {\n      -webkit-text-stroke-width: 3px;\n      font-size: 10vw;\n      &.multi {\n        font-size: 7vw;\n      }\n    }\n\n    &.difference {\n      font-size: 13vw;\n      &.multi {\n        font-size: 10vw;\n      }\n    }\n  }\n}\n",".article-section {\n  position: relative;\n  // z-index: 1;\n}\n\n.article-section-title {\n  color: $yellow;\n  font-family: \"pixeloid\";\n  font-size: 20px;\n  text-align: center;\n  margin-bottom: 3vh;\n  margin-top: 2vh;\n}\n\n.articles-cont {\n  display: flex;\n  flex-direction: column;\n  gap: 2vh;\n  align-items: center;\n}\n\n.article {\n  display: flex;\n  background: $gradient-blue;\n  width: fit-content;\n  height: fit-content;\n  text-decoration: none;\n  color: $dark;\n  max-width: 80vw;\n  border-radius: 10px;\n\n  &:hover {\n    mix-blend-mode: difference;\n  }\n}\n\n.article-img {\n  width: 10vh;\n  object-fit: cover;\n}\n\n.article-texts {\n  padding: 1vh;\n  gap: 2vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.article-date {\n  font-family: \"Inspiration\";\n  font-size: 14px;\n}\n\n.article-title {\n  font-size: 12px;\n  text-decoration: underline;\n}\n\n.article-blank {\n  color: $light;\n  font-weight: 700;\n  font-size: 20px;\n  margin-top: 5vh;\n}\n\n.article-cta-btn {\n  background: rgba($light, 0.7);\n  padding: 10px;\n  font-family: \"Pixeloid \";\n  font-size: 10px;\n  align-self: flex-end;\n  margin: 5vh 2vw 0 0;\n  opacity: 0.6;\n  position: relative;\n  z-index: 3;\n\n  &.center {\n    align-self: unset;\n    margin-bottom: 10vh;\n  }\n\n  &:hover {\n    opacity: 1;\n    transform: rotateX(180deg);\n  }\n}\n\n@include bp(\"md\") {\n  .article-section-title {\n    font-size: 2.5vw;\n    margin-top: 0;\n  }\n\n  .article-img {\n    width: 15vh;\n  }\n\n  .article {\n    max-width: 60vw;\n  }\n\n  .article-title {\n    font-size: 1.6vw;\n  }\n\n  .article-date {\n    font-size: 2vw;\n  }\n\n  .article-cta-btn {\n    font-size: 1.2vw;\n  }\n  .article-blank {\n    font-size: 32px;\n  }\n}\n",".filters-cont {\n  border-radius: 10px;\n  background: rgba(149, 149, 149, 0.35);\n  box-shadow: 0px 0px 14px 0px rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(2px);\n  position: fixed;\n  bottom: 2vh;\n  right: 1vw;\n  z-index: 2;\n  display: inline-flex;\n  padding: 10px;\n  flex-direction: column;\n\n  gap: 10px;\n\n  color: $light;\n\n  &.hidden {\n    transform: translateX(120%);\n    background: rgba(149, 149, 149, 0.5);\n  }\n}\n\n.filters-box {\n  border-radius: 10px;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  background: rgba(221, 221, 221, 0.1);\n  display: flex;\n  padding: 8px;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.filters-box.mobile-open {\n  position: fixed;\n  background: rgba(221, 221, 221, 0.2);\n  top: 10vh;\n  right: 2vw;\n  z-index: 4;\n\n  &.hidden {\n    display: none;\n  }\n}\n\n.filters-box.research {\n  height: 8vh;\n  font-size: 24px;\n\n  color: $light;\n\n  &:focus {\n    background: $red;\n    box-shadow: 0 0 12px 2px rgba(255, 0, 221, 0.854);\n    &::placeholder {\n      opacity: 0.7;\n    }\n  }\n}\n\n.filters-box-title,\n.research::placeholder {\n  color: $light;\n  font-family: \"Inspiration\";\n  font-size: 40px;\n  font-weight: 400;\n}\n\n.filters-box-cont {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  label {\n    font-family: Helvetica;\n    font-weight: 200;\n    font-size: 20px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    cursor: crosshair;\n\n    span {\n      font-size: 16px;\n    }\n\n    input {\n      display: none;\n    }\n\n    input:checked + .filter-box-radio {\n      &::before {\n        content: \"\";\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        background: $light;\n        width: 4px;\n        height: 4px;\n      }\n    }\n  }\n}\n\n.filter-box-radio {\n  position: relative;\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  border: 1px solid $light;\n  transform: rotate(45deg);\n}\n\n.filters-box.pagination {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.filters-box-pagination-elem {\n  color: $light;\n  font-size: 12px;\n  background: none;\n  border: none;\n\n  &.text {\n    font-size: 10px;\n    text-decoration: underline;\n  }\n\n  &.disabled {\n    opacity: 0.6;\n  }\n}\n\n@include bp(\"md\") {\n  .filters-cont {\n    left: 1vw;\n    bottom: 5vh;\n    right: unset;\n  }\n}\n"],"names":[],"version":3,"file":"index.2e833de6.css.map"}